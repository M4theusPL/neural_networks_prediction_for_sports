{"ast":null,"code":"var _jsxFileName = \"/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Result.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Result({\n  formData,\n  setFormData\n}) {\n  _s();\n  const {\n    discipline,\n    country\n  } = formData;\n  const [data, setData] = useState({\n    discipline: \"\",\n    opponent: \"\",\n    result: \"\"\n  });\n  const [inputDiscipline, setInputDiscipline] = useState(\"\");\n  const [inputCountry, setInputCountry] = useState(\"\");\n  const [selectedDiscipline, setSelectedDiscipline] = useState(discipline);\n  const [selectedCountry, setSelectedCountry] = useState(country);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(`discipline/${selectedDiscipline}/opponent/${selectedCountry}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Received data:\", data);\n        setData(data);\n      }).catch(error => {\n        console.error('Error: ', error);\n        setData({\n          discipline: \"N/A\",\n          opponent: \"N/A\",\n          result: \"There is no such discipline or country in the database!\"\n        });\n      });\n    };\n    fetchData();\n  }, [selectedCountry, selectedDiscipline]);\n  selectedCountry = {\n    country\n  };\n  selectedDiscipline = {\n    discipline\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-component\",\n    children: [data.discipline, data.country]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Result, \"eGIsdkhNXAQw/RV7tpgUY9znWuQ=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","Result","formData","setFormData","_s","discipline","country","data","setData","opponent","result","inputDiscipline","setInputDiscipline","inputCountry","setInputCountry","selectedDiscipline","setSelectedDiscipline","selectedCountry","setSelectedCountry","useEffect","fetchData","fetch","then","response","ok","Error","status","json","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Result.js"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n\nfunction Result({formData, setFormData}){\n\n    const { discipline, country } = formData;\n\n    const [data, setData] = useState({ discipline: \"\", opponent: \"\", result: \"\" });\n    const [inputDiscipline, setInputDiscipline] = useState(\"\");\n    const [inputCountry, setInputCountry] = useState(\"\");\n    const [selectedDiscipline, setSelectedDiscipline] = useState(discipline);\n    const [selectedCountry, setSelectedCountry] = useState(country);\n\n    useEffect(() => {\n            const fetchData = () => {\n            fetch(`discipline/${selectedDiscipline}/opponent/${selectedCountry}`)\n            .then((response) => {\n                if(!response.ok){\n                throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                console.log(\"Received data:\", data);\n                setData(data);\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n                setData({\n                discipline: \"N/A\",\n                opponent: \"N/A\",\n                result: \"There is no such discipline or country in the database!\",\n            });\n            });\n        } \n        \n        fetchData();\n    }, [selectedCountry, selectedDiscipline]);\n\n    selectedCountry = {country};\n    selectedDiscipline = {discipline}\n\n    return(\n        <div className=\"result-component\">\n            {data.discipline}\n            {data.country}\n        </div>\n    )\n}\n\nexport default Result;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAC;EAAAC,EAAA;EAEpC,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGJ,QAAQ;EAExC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAAEQ,UAAU,EAAE,EAAE;IAAEI,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAACQ,UAAU,CAAC;EACxE,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAACS,OAAO,CAAC;EAE/Da,SAAS,CAAC,MAAM;IACR,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACxBC,KAAK,CAAE,cAAaN,kBAAmB,aAAYE,eAAgB,EAAC,CAAC,CACpEK,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;QACzD;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDL,IAAI,CAAEf,IAAI,IAAK;QACZqB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEtB,IAAI,CAAC;QACnCC,OAAO,CAACD,IAAI,CAAC;MACjB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BvB,OAAO,CAAC;UACRH,UAAU,EAAE,KAAK;UACjBI,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE;QACZ,CAAC,CAAC;MACF,CAAC,CAAC;IACN,CAAC;IAEDU,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,eAAe,EAAEF,kBAAkB,CAAC,CAAC;EAEzCE,eAAe,GAAG;IAACX;EAAO,CAAC;EAC3BS,kBAAkB,GAAG;IAACV;EAAU,CAAC;EAEjC,oBACIL,OAAA;IAAKgC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC5B1B,IAAI,CAACF,UAAU,EACfE,IAAI,CAACD,OAAO;EAAA;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd;AAACjC,EAAA,CA7CQH,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}