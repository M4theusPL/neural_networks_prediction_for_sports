{"ast":null,"code":"var _jsxFileName = \"/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Country.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Country({\n  formData,\n  setFormData\n}) {\n  _s();\n  const conutrys = [\"France\", \"Germany\", \"Portugal\", \"Denmark\"]; // Dodaj dowolne dyscypliny, jakie chcesz\n\n  const [csvData, setCsvData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('../../football_data.csv');\n      const reader = response.body.getReader();\n      const result = await reader.read();\n      const text = new TextDecoder().decode(result.value);\n      Papa.parse(text, {\n        complete: parsedData => {\n          console.log(parsedData.data);\n          setCsvData(parsedData.data);\n        },\n        header: true\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discipline-component\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: conutrys.map((country, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormData({\n          ...formData,\n          country\n        }),\n        className: formData.country === country ? \"selected\" : \"\",\n        children: country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Country, \"qkhIVhzzQG6T5OyJ7AY2hG4FL4o=\");\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","Papa","jsxDEV","_jsxDEV","Country","formData","setFormData","_s","conutrys","csvData","setCsvData","useState","useEffect","fetchData","response","fetch","reader","body","getReader","result","read","text","TextDecoder","decode","value","parse","complete","parsedData","console","log","data","header","className","children","map","country","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Country.js"],"sourcesContent":["import React from \"react\";\nimport Papa from 'papaparse';\n\nfunction Country({formData, setFormData}){\n    const conutrys = [\"France\", \"Germany\", \"Portugal\", \"Denmark\"]; // Dodaj dowolne dyscypliny, jakie chcesz\n\n    const [csvData, setCsvData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('../../football_data.csv');\n      const reader = response.body.getReader();\n      const result = await reader.read();\n      const text = new TextDecoder().decode(result.value);\n\n      Papa.parse(text, {\n        complete: (parsedData) => {\n          console.log(parsedData.data);\n          setCsvData(parsedData.data);\n        },\n        header: true,\n      });\n    };\n\n    fetchData();\n  }, []);\n\n    return(\n        <div className=\"discipline-component\">\n            {/* <input type=\"text\" placeholder=\"Discipline...\" \n            value={formData.discipline} \n            onChange={(event) => setFormData({ ...formData, discipline: event.target.value })} /> */}\n            <div>\n                {conutrys.map((country, index) => (\n                    <button\n                        key={index}\n                        onClick={() => setFormData({ ...formData, country })}\n                        className={formData.country === country ? \"selected\" : \"\"}\n                    >\n                    {country}\n                    </button>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Country;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,OAAOA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAC;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;;EAE/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;MACvD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAC,CAAC;MACxC,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,CAAC;MAClC,MAAMC,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACJ,MAAM,CAACK,KAAK,CAAC;MAEnDvB,IAAI,CAACwB,KAAK,CAACJ,IAAI,EAAE;QACfK,QAAQ,EAAGC,UAAU,IAAK;UACxBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,IAAI,CAAC;UAC5BpB,UAAU,CAACiB,UAAU,CAACG,IAAI,CAAC;QAC7B,CAAC;QACDC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAEDlB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACIV,OAAA;IAAK6B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eAIjC9B,OAAA;MAAA8B,QAAA,EACKzB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBjC,OAAA;QAEIkC,OAAO,EAAEA,CAAA,KAAM/B,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAE8B;QAAQ,CAAC,CAAE;QACrDH,SAAS,EAAE3B,QAAQ,CAAC8B,OAAO,KAAKA,OAAO,GAAG,UAAU,GAAG,EAAG;QAAAF,QAAA,EAE7DE;MAAO,GAJCC,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClC,EAAA,CA1CQH,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA4ChB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}