{"ast":null,"code":"var _jsxFileName = \"/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Country.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Country({\n  formData,\n  setFormData\n}) {\n  _s();\n  const [csvData, setCsvData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('../../football_data.csv');\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const text = new TextDecoder().decode(result.value);\n        Papa.parse(text, {\n          complete: parsedData => {\n            console.log(parsedData.data);\n            setCsvData(parsedData.data);\n          },\n          header: true\n        });\n      } catch (error) {\n        console.error('Error fetching CSV data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discipline-component\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: csvData.map((row, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormData({\n          ...formData,\n          country: row.Opponent\n        }),\n        className: formData.country === row.Opponent ? \"selected\" : \"\",\n        children: row.Opponent\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Country, \"qkhIVhzzQG6T5OyJ7AY2hG4FL4o=\");\n_c = Country;\nexport default Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","useState","useEffect","Papa","jsxDEV","_jsxDEV","Country","formData","setFormData","_s","csvData","setCsvData","fetchData","response","fetch","reader","body","getReader","result","read","text","TextDecoder","decode","value","parse","complete","parsedData","console","log","data","header","error","className","children","map","row","index","onClick","country","Opponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mateusz/Documents/Projekt/neural_networks_prediction_for_sports/client/src/components/Country.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from 'papaparse';\n\nfunction Country({formData, setFormData}){\n    const [csvData, setCsvData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await fetch('../../football_data.csv');\n            const reader = response.body.getReader();\n            const result = await reader.read();\n            const text = new TextDecoder().decode(result.value);\n    \n            Papa.parse(text, {\n              complete: (parsedData) => {\n                console.log(parsedData.data);\n                setCsvData(parsedData.data);\n              },\n              header: true,\n            });\n          } catch (error) {\n            console.error('Error fetching CSV data:', error);\n          }\n        };\n    \n        fetchData();\n      }, []);\n\n    return(\n        <div className=\"discipline-component\">\n            <div>\n            {csvData.map((row, index) => (\n          <button\n            key={index}\n            onClick={() => setFormData({ ...formData, country: row.Opponent })}\n            className={formData.country === row.Opponent ? \"selected\" : \"\"}\n          >\n            {row.Opponent}\n          </button>\n        ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Country;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,OAAOA,CAAC;EAACC,QAAQ;EAAEC;AAAW,CAAC,EAAC;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;QACvD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAC,CAAC;QACxC,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,CAAC;QAClC,MAAMC,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACJ,MAAM,CAACK,KAAK,CAAC;QAEnDpB,IAAI,CAACqB,KAAK,CAACJ,IAAI,EAAE;UACfK,QAAQ,EAAGC,UAAU,IAAK;YACxBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,IAAI,CAAC;YAC5BlB,UAAU,CAACe,UAAU,CAACG,IAAI,CAAC;UAC7B,CAAC;UACDC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAER,oBACIP,OAAA;IAAK2B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjC5B,OAAA;MAAA4B,QAAA,EACCvB,OAAO,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1B/B,OAAA;QAEEgC,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAE+B,OAAO,EAAEH,GAAG,CAACI;QAAS,CAAC,CAAE;QACnEP,SAAS,EAAEzB,QAAQ,CAAC+B,OAAO,KAAKH,GAAG,CAACI,QAAQ,GAAG,UAAU,GAAG,EAAG;QAAAN,QAAA,EAE9DE,GAAG,CAACI;MAAQ,GAJRH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClC,EAAA,CAzCQH,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA2ChB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}